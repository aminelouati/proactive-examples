<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="AWS_Lambda_Invoke_Function" projectName="Cloud Services" tags="AWS Lambda,Serverless Computing,Invoke,Function" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="ACCESS_KEY" value="my_access_key" model="PA:NOT_EMPTY_STRING" description="S3 user access key" group="Lambda Authentication" advanced="false" hidden="false"/>
    <variable name="SECRET_KEY" value="${ACCESS_KEY}" model="PA:CREDENTIAL" description="S3 user secret key" group="Lambda Authentication" advanced="false" hidden="false"/>
    <variable name="REGION" value="eu-west-3" model="PA:NOT_EMPTY_STRING" description="Specify the region to use in your command." group="Lambda Authentication" advanced="false" hidden="false"/>
    <variable name="FUNCTION_NAME" value="my_function" model="NOT_EMPTY_STRING" description="The name of the Lambda function, version, or alias." group="Operation Parameters" advanced="false" hidden="false"/>
    <variable name="FUNCTION_QUALIFIER" value=""  description="Specify a version or alias to invoke a published version of the function." group="Operation Parameters" advanced="false" hidden="false"/>
  </variables>
  <description>
    <![CDATA[ AWS allows you to run code without the need to provision or manage servers, and only pay for the computing time you use. The AWS Lambda Connector provides you the ability to interact with your Lambda functions provisioned on AWS. It allows you to manage or use the function's response payload in an effective manner.
Before you can run this connector, you need to have an AWS IAM credentials and to know the region where the AWS Lambda function is located. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="it-application-connectors"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/lambda.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="AWS_Lambda_Invoke_Function"
    preciousResult="true"
    fork="true"
    runAsMe="true" >
      <description>
        <![CDATA[ A task that invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set InvocationType to Event . ]]>
      </description>
      <variables>
          <variable name="FUNCTION_NAME" value="my_function" model="NOT_EMPTY_STRING" inherited="false" description="The name of the Lambda function, version, or alias." group="Lambda Parameters" advanced="false" hidden="false"/>
          <variable name="FUNCTION_QUALIFIER" value=""  inherited="false" description="Specify a version or alias to invoke a published version of the function." group="Lambda Parameters" advanced="false" hidden="false"/>
          <variable name="INVOCATION_TYPE" value="RequestResponse" inherited="false" model="PA:LIST(Event,RequestResponse,DryRun)" description="Specify the way to invoke the lambda function." group="Input Parameters" advanced="false" hidden="false"/>
        <variable name="PAYLOAD" value="{&quot;key&quot;: &quot;value&quot;}" inherited="false" model="PA:JSON?" description="The JSON that you want to provide to your Lambda function as input." group="Input Parameters" advanced="false" hidden="false"/>
        <variable name="OPTIONS" value="" inherited="false"  description="Specify the Lambda operation options that can be added to the command execution." group="Input Parameters" advanced="false" hidden="false"/>
        <variable name="OUTFILE" value="response.json" inherited="false"  description="Filename where the operation response content will be saved. For the invoke operation, the value is mandatory." group="Output Parameters" advanced="false" hidden="false"/>
        <variable name="LOGTYPE" value="None" inherited="false" model="PA:LIST(Tail,None)" description="Set to Tail to include the execution log in the response. Applied to synchronously invoked functions only." group="Output Parameters" advanced="false" hidden="false"/>
        <variable name="ERROR_HANDLING" value="true" inherited="false" model="PA:BOOLEAN" description="If present, indicates that an error occurred during function execution. Details about the error are included in the response payload." group="Output Parameters" advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/lambda.png"/>
        <info name="Task.Documentation" value="https://docs.aws.amazon.com/cli/latest/reference/lambda/invoke.html"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="bash">
            <![CDATA[
ACCESS_KEY=$variables_ACCESS_KEY
CRED_KEY=credentials_$ACCESS_KEY
SECRET_KEY=${!CRED_KEY}
REGION="$variables_REGION"
FUNCTION_NAME="$variables_FUNCTION_NAME"
QUALIFIER=$variables_FUNCTION_QUALIFIER
INVOCATION_TYPE="$variables_INVOCATION_TYPE"
PAYLOAD=$variables_PAYLOAD
OPTIONS="$variables_OPTIONS"
OUTFILE="$variables_OUTFILE"

mkdir .aws
cd .aws
echo -e "[default] \n aws_access_key_id = $ACCESS_KEY \n aws_secret_access_key = $SECRET_KEY \n" >> credentials

COMMAND="docker run --rm -i -v $localspace/.aws:/root/.aws -v $localspace:/aws amazon/aws-cli lambda invoke --function-name $FUNCTION_NAME --invocation-type $INVOCATION_TYPE $OPTIONS $OUTFILE --region $REGION"


if [ ! -z "$QUALIFIER" ]; then
    COMMAND="$COMMAND --qualifier $QUALIFIER"
fi

if [ ! -z "$PAYLOAD" ]; then
    COMMAND="$COMMAND --cli-binary-format raw-in-base64-out --payload '$PAYLOAD'"
fi
echo $COMMAND

COMMAND_OUTPUT=$(eval $COMMAND 2>&1)
echo $COMMAND_OUTPUT

ERROR='FunctionError'
if [[ "$COMMAND_OUTPUT" == *"$ERROR"* ]]; then
	echo An error occurred during function execution.
    cat $localspace/$OUTFILE >&2
    exit 1
fi
]]>
          </code>
        </script>
      </scriptExecutable>
      <post>
        <script>
          <code language="groovy">
            <![CDATA[
import com.google.common.net.MediaType

fileName = variables.get("OUTFILE")
file = new File(fileName)
print(file.text)
result = file.getBytes()
resultMetadata.put("file.name", fileName)
resultMetadata.put("content.type", MediaType.JSON_UTF_8.toString())
]]>
          </code>
        </script>
      </post>
      <outputFiles>
        <files  includes="$OUTFILE" accessMode="transferToUserSpace"/>
      </outputFiles>
      <metadata>
        <positionTop>
            89.599609375
        </positionTop>
        <positionLeft>
            139.98046875
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3295px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-84.599609375px;left:-134.98046875px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable active-task" id="jsPlumb_1_301" style="top: 89.6px; left: 139.98px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="A task that invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set InvocationType to Event ."><img src="/automation-dashboard/styles/patterns/img/wf-icons/lambda.png" width="20px">&nbsp;<span class="name">AWS_Lambda_Invoke_Function</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i title="Workflows being Called by this Task" id="called-icon"></i></a><a title="Scripts being Called by this Task" id="reference-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: -7px; right: 3px;"><i id="reference-icon"></i></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 221.5px; top: 120px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>