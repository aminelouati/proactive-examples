<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.14" xsi:schemaLocation="urn:proactive:jobdescriptor:3.14 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.14/schedulerjob.xsd"  name="Submit_Many_Jobs_And_Wait" projectName="2. Inter-Job Controls" tags="Controls,Get started,Building blocks" priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <description>
    <![CDATA[ Submit a workflow referenced in the ProActive Catalog (or accessible by url) multiple times and wait for their termination by checking every minute if the jobs are terminated. ]]>
  </description>
  <genericInformation>
    <info name="bucketName" value="control-templates"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_and_wait_for_any.png"/>
    <info name="Documentation" value="user/ProActiveUserGuide.html#_chaining_workflows_submit_a_workflow_from_another_workflow"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="Submit_Many_Jobs_And_Wait"




    fork="true">
      <description>
        <![CDATA[ Submit a workflow referenced in the ProActive Catalog (or accessible by url) multiple times and wait for their termination by checking every minute if the jobs are terminated. ]]>
      </description>
      <variables>
        <variable name="called_workflow" value="basic-examples/Print_File_Name" inherited="false" model="PA:CATALOG_OBJECT" description="Workflow to submit from the ProActive Catalog"  advanced="false" hidden="false"/>
        <variable name="called_workflow_parameters" value="[ { &quot;file&quot; : &quot;file1&quot;} , { &quot;file&quot; : &quot;file2&quot;}, { &quot;file&quot; : &quot;file3&quot;} ]" inherited="false" model="PA:JSON" description="Called workflow parameters. Must be a &lt;b&gt;json list object&lt;/b&gt; which size corresponds to the number of workflows to submit. Each list element must be a &lt;b&gt;map object&lt;/b&gt; with keys and values representing parameters of the workflow"  advanced="false" hidden="false"/>
      </variables>
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_and_wait_for_any.png"/>
        <info name="task.documentation" value="user/ProActiveUserGuide.html#_chaining_workflows_submit_a_workflow_from_another_workflow"/>
      </genericInformation>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Submit a workflow referenced in the ProActive Catalog (or accessible by url)

// Please add the bucket and workflow names that you want to execute as Task Variables 'called_workflow'

// connect to the scheduler
import groovy.json.JsonSlurper
import java.util.Map
import java.util.List

schedulerapi.connect()
def jobidList
if( !variables.get("jobSubmitted") ){
    // get the workflow information from Task Variables
    def calledWorkflow = variables.get("called_workflow")

    // variables submitted to the workflow
    def workflow_variables_json =  variables.get("called_workflow_parameters")
    def all_workflow_variables = new java.util.ArrayList()

    def jsonSlurper = new JsonSlurper()

    def object = jsonSlurper.parseText(workflow_variables_json)
    assert object instanceof List
    def nbSubmissions = 0;
    for (i = 0; i < object.size(); i++) {
        nbSubmissions++;
        def paramObject = object.get(i)
        assert paramObject instanceof Map
        all_workflow_variables.add(paramObject)
    }

    println "Submitting " + nbSubmissions + " workflows " + calledWorkflow

    // submitting the job
    def generic_infos_map = ["PARENT_JOB_ID" : variables.get("PA_JOB_ID")]
    jobidList = new java.util.ArrayList()

    for (i = 0; i < nbSubmissions; i++) {
    	def jobid = schedulerapi.submitFromCatalog(variables.get("PA_CATALOG_REST_URL"), calledWorkflow, all_workflow_variables.get(i), generic_infos_map)
        println "Job submitted with job id " + jobid
        jobidList.add(jobid)
    }
    variables.put("jobSubmitted", true)
    variables.put("jobidList", jobidList)
}

if (jobidList == null) {
    jobidList = variables.get("jobidList")
}
isFinished = true;
for (i = 0; i < jobidList.size(); i++) {
	isFinished = isFinished && schedulerapi.isJobFinished(jobidList.get(i))
}

variables.put("isFinished", isFinished)
if (isFinished) {
    println "All submitted workflows are finished."
}

result = jobidList
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <loop target="Submit_Many_Jobs_And_Wait">
          <script>
            <code language="groovy">
              <![CDATA[
// You can use a Cron Expression here
// examples http://www.sauronsoftware.it/projects/cron4j/manual.php#p02
if (!variables.get("isFinished")) {
	loop = "* * * * *";
} else {
    variables.put("jobSubmitted", false);
	loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
      <metadata>
        <positionTop>
            241.708984375
        </positionTop>
        <positionLeft>
            122.51953125
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2688px;
            height:3580px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-236.708984375px;left:-117.51953125px"><div class="task ui-draggable _jsPlumb_endpoint_anchor_" id="jsPlumb_1_240" style="top: 241.711px; left: 122.526px;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="Submit a workflow referenced in the ProActive Catalog (or accessible by url) multiple times and wait for their termination by checking every minute if the jobs are terminated."><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_submit_and_wait_for_any.png" width="20px">&nbsp;<span class="name">Submit_Many_Jobs_And_Wait</span></a>&nbsp;&nbsp;<a id="called-icon-a" href="javascript:void(0)" class="pointer" style=" position: inherit; top: 17px; right: 3px;"><i id="called-icon" class="glyphicon glyphicon-arrow-right"></i></a></div><svg style="position:absolute;left:288.5px;top:231.5px" width="61" height="61" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 40 C 50 -10 -10 50 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#316b31" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M13.55903999999999,26.37184000000001 L31.950657715430147,15.848133532719785 L22.731266562420885,15.794966176056539 L21.37378389148668,6.67590697029889 L13.55903999999999,26.37184000000001" class="" stroke="#316b31" fill="#316b31" transform="translate(10.5,10.5)"></path></svg><div class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_248" style="position: absolute; transform: translate(-50%, -50%); left: 313.5px; top: 261.5px;">loop</div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 201px; top: 272px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint source-endpoint loop-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 289px; top: 232px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div><div class="_jsPlumb_endpoint target-endpoint loop-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full" style="position: absolute; height: 20px; width: 20px; left: 289px; top: 272px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#316b31" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>